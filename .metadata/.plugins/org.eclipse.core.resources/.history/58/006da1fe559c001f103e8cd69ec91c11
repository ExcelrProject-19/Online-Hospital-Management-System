package com.HMS.controller;

import com.HMS.model.Appointment;
import com.HMS.model.AppointmentDTO;
import com.HMS.model.CustomAppointmentResponse;
import com.HMS.model.User;
import com.HMS.service.AppointmentService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.web.bind.annotation.*;

import java.security.Principal;
import java.util.List;

@RestController
@RequestMapping("/appointments")
public class AppointmentController {
    
    @Autowired
    private AppointmentService appointmentService;

    @PostMapping("/create")
    @PreAuthorize("hasAuthority('PATIENT')")
    public CustomAppointmentResponse createAppointment(@RequestBody AppointmentDTO appointmentDTO, Principal principal) {
        // Extract the authenticated user's email (using principal)
        String email = principal.getName(); // email is the username

     // Create the appointment and retrieve the complete appointment info with doctor details
        Appointment appointment = appointmentService.createAppointment(
                email, 
                appointmentDTO.getDoctorId(), 
                appointmentDTO.getAppointmentDate(), 
                appointmentDTO.getDescription()
        );

        // Get doctorâ€™s degree and qualification from the appointment object
        String doctorDegree = appointment.getDoctor().getDegree();
        String doctorQualification = appointment.getDoctor().getQualification();
        String doctorFullName = appointment.getDoctor().getUser().getFirstName() + " " + appointment.getDoctor().getUser().getLastName();
        
        return new CustomAppointmentResponse("Appointment created successfully!", appointment, doctorDegree, doctorQualification,doctorFullName);
    }
    

    @GetMapping("/doctor/{doctorId}")
    public List<Appointment> getAppointmentsForDoctor(@PathVariable Long doctorId) {
        return appointmentService.getAppointmentsForDoctor(doctorId);
    }

    @GetMapping("/patient/{patientId}")
    public List<Appointment> getAppointmentsForPatient(@PathVariable Long patientId) {
        return appointmentService.getAppointmentsForPatient(patientId);
    }
}
