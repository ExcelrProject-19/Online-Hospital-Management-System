package com.HMS.controller;

import com.HMS.model.Appointment;
import com.HMS.model.AppointmentDTO;
import com.HMS.model.CustomAppointmentResponse;
import com.HMS.model.Doctor;
import com.HMS.model.User;
import com.HMS.service.AppointmentService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.web.bind.annotation.*;

import java.security.Principal;
import java.util.List;

@RestController
@RequestMapping("/appointments")
public class AppointmentController {
    
    @Autowired
    private AppointmentService appointmentService;

    @PostMapping("/create")
    @PreAuthorize("hasAuthority('PATIENT')")
    public CustomAppointmentResponse createAppointment(@RequestBody AppointmentDTO appointmentDTO, Principal principal) {
        String email = principal.getName();

        // Create the appointment and retrieve the complete appointment info with doctor details
        Appointment appointment = appointmentService.createAppointment(
                email, 
                appointmentDTO.getDoctorId(), 
                appointmentDTO.getAppointmentDate(), 
                appointmentDTO.getDescription()
        );
        
        Doctor doctor = appointment.getDoctor();
        String doctorFullName = doctor.getUser().getFirstName() + " " + doctor.getUser().getLastName();
        String doctorDegree = doctor.getDegree();
        String doctorQualification = doctor.getQualification();

        // Create and return response
        return new CustomAppointmentResponse(
                "Appointment created successfully!", 
                appointment, 
                doctorFullName, 
                doctorDegree, 
                doctorQualification
        );

         }
    

//    @GetMapping("/doctor/{doctorId}")
//    public List<Appointment> getAppointmentsForDoctor(@PathVariable Long doctorId) {
//        return appointmentService.getAppointmentsForDoctor(doctorId);
//    }
//
//    @GetMapping("/patient/{patientId}")
//    public List<Appointment> getAppointmentsForPatient(@PathVariable Long patientId) {
//        return appointmentService.getAppointmentsForPatient(patientId);
//    }
    
 // Endpoint for doctors to view their appointments
    @GetMapping("/doctor")
    @PreAuthorize("hasAuthority('DOCTOR')")
    public List<Appointment> getAppointmentsForDoctor(Principal principal) {
        String email = principal.getName(); // Get the email of the logged-in doctor
        return appointmentService.getAppointmentsForDoctor(email);
    }

    // Endpoint for patients to view their appointments
    @GetMapping("/patient")
    @PreAuthorize("hasAuthority('PATIENT')")
    public List<Appointment> getAppointmentsForPatient(@AuthenticationPrincipal Principal principal) {
        String email = principal.getName(); // Get the email of the logged-in patient
        return appointmentService.getAppointmentsForPatient(email);
    }
}
